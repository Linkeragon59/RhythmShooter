// Specifies the properties (beat times, enemies spawn points/time...) of stage 1

using UnityEngine;
using System.Collections;

public class Stage1 : Stage {

	override public float[] BeatsTimes (){
		float[] times = new float[]{0.0f,0.207f,0.414f,0.622f,0.622f,0.829f,1.036f,1.243f,1.243f,1.657f,
			1.865f,2.072f,2.279f,2.486f,2.693f,2.9f,3.108f,3.315f,3.522f,3.729f,
			3.936f,3.936f,4.144f,4.351f,4.558f,4.558f,4.972f,5.179f,5.387f,5.594f,
			5.801f,6.008f,6.215f,6.423f,6.63f,6.837f,7.044f,7.251f,7.251f,7.458f,
			7.458f,7.666f,7.873f,7.873f,8.08f,8.287f,8.494f,8.701f,8.909f,9.116f,
			9.323f,9.53f,9.737f,9.945f,10.152f,10.359f,10.566f,10.566f,10.773f,10.773f,
			10.98f,11.188f,11.188f,11.395f,11.602f,11.809f,12.016f,12.223f,12.431f,12.638f,
			12.845f,13.052f};
		return times;
	}
	override public int[] BeatsTypes (){
		int[] types = new int[]{1,2,1,2,0,1,2,1,0,1,
			2,1,2,1,2,1,2,1,2,1,
			2,0,1,2,1,0,1,2,1,2,
			1,2,1,2,1,2,1,2,0,0,
			1,2,1,0,0,1,2,1,2,1,
			2,1,2,1,2,1,2,0,0,1,
			2,1,0,0,1,2,1,2,1,2,
			1,2};
		return types;
	}
	override public int[] BeatsTargets (){
		int[] targets = new int[]{1,2,1,2,0,1,2,1,0,1,
			2,1,2,1,2,1,2,1,2,1,
			2,0,1,2,1,0,1,2,1,2,
			1,2,1,2,1,2,1,2,0,0,
			1,2,1,0,0,1,2,1,2,1,
			2,1,2,1,2,1,2,0,0,1,
			2,1,0,0,1,2,1,2,1,2,
			1,2};
		return targets;
	}
	override public int[] BeatsDifficultiesMin (){
		int[] dificulties = new int[]{2,4,3,4,1,2,4,3,1,2,
			4,3,4,2,4,3,4,2,4,3,
			4,1,2,4,3,1,2,4,3,4,
			2,4,3,4,2,4,3,4,1,1,
			2,4,3,1,1,2,4,3,4,2,
			4,3,4,2,4,3,4,1,1,2,
			4,3,1,1,2,4,3,4,2,4,
			3,4};
		return dificulties;
	}
	override public int[] BeatsDifficultiesMax (){
		int[] dificulties = new int[]{4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4};
		return dificulties;
	}


	override public float[] SpawnsTimes (){
		float[] times = new float[]{1f,2f,3f,4f,5f,6f,7f,8f,9f,10f,
			11f,12f,13f,14f,15f,16f,17f,18f,19f,20f,
			21f,22f,23f,24f,25f,26f,27f,28f,29f,30f,
			31f,32f,33f,34f,35f,36f,37f,38f,39f,40f,
			41f,42f,43f,44f,45f,46f,47f,48f,49f,50f,
			51f,52f,53f,54f,55f,56f,57f,58f,59f,60f,
			61f,62f,63f,64f,65f,66f,67f,68f,69f,70f,
			75f};
		return times;
	}
	override public int[] SpawnsTypes (){
		int[] types = new int[]{0,0,1,0,0,1,0,0,1,0,
			0,1,0,0,1,0,0,1,0,0,
			1,0,0,1,0,0,1,0,0,1,
			0,1,0,0,1,0,0,1,0,0,
			1,0,0,1,0,0,1,0,0,1,
			0,1,0,0,1,0,0,1,0,0,
			1,0,0,1,0,0,1,0,0,1,
			-1};
		return types;
	}
	override public float[] SpawnsPositions (){
		float[] positions = new float[]{0.658662235f,0.679636737f,0.633488119f,0.095617837f,0.420625449f,0.172398603f,0.044542984f,0.143589503f,0.567061047f,0.429930463f,
			0.41912927f,0.452498386f,0.884801074f,0.817116234f,0.169939634f,0.363765517f,0.965644387f,0.455221252f,0.24017334f,0.379443331f,
			0.973301428f,0.246644544f,0.325823452f,0.639715885f,0.527175757f,0.984764863f,0.644874639f,0.827491332f,0.14564576f,0.922202473f,
			0.857798837f,0.156454868f,0.374506648f,0.221601292f,0.757883775f,0.374954735f,0.54629929f,0.333296499f,0.313703378f,0.429127179f,
			0.597042196f,0.730461866f,0.931040245f,0.460800458f,0.4562772f,0.572441008f,0.538351027f,0.504313328f,0.708598826f,0.124167087f,
			0.040554454f,0.246411695f,0.68191807f,0.202196888f,0.885971295f,0.277940276f,0.713754845f,0.494636435f,0.082199352f,0.324852115f,
			0.183088014f,0.793417838f,0.933494134f,0.645844783f,0.437394352f,0.23482533f,0.386239823f,0.674052485f,0.696894169f,0.148460018f,
			0.5f};
		return positions;
	}
	override public int[] SpawnsDifficultiesMin (){
		int[] difficulties = new int[]{1,2,1,2,1,2,1,2,1,2,
			1,2,1,2,1,2,1,2,1,2,
			1,2,1,2,1,2,1,2,1,2,
			1,2,1,2,1,2,1,2,1,2,
			1,2,1,2,1,2,1,2,1,2,
			1,2,1,2,1,2,1,2,1,2,
			1,2,1,2,1,2,1,2,1,2,
			1};
		return difficulties;
	}
	override public int[] SpawnsDifficultiesMax (){
		int[] difficulties = new int[]{4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,
			4};
		return difficulties;
	}
}
